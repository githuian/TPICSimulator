/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jpmcsimulator;

import controller.ConfigHandler;
import controller.OperationData;
import controller.ParaData;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.AbstractListModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.ListModel;
import obj.WSDLData;

/**
 *
 * @author hui
 */
public class ConfigurationDialog extends javax.swing.JDialog {

    private OperationData operationDataModel = new OperationData();
    private OperationData testOperationDataModel = new OperationData();
    public final static String CONFIGFOLDER = "./WSDLTest/projects/soap_test/";
    private ParaData paraDataModel = new ParaData();
    /**
     * Creates new form ConfigurationDialog
     */
    public ConfigurationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuTestOperation = new javax.swing.JPopupMenu();
        jMenuItemAddFile = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldWSDLPath = new javax.swing.JTextField();
        jButtonLoad = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListOperations = new javax.swing.JList();
        jLabelOperations = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListTestOperations = new javax.swing.JList();
        jButtonRIght = new javax.swing.JButton();
        jButtonLeft = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldRunTime = new javax.swing.JTextField();
        jTextFieldRampUpTime = new javax.swing.JTextField();
        jTextFieldThreads = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldInterval = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListPara = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();

        jMenuItemAddFile.setText("Set Parameters...");
        jPopupMenuTestOperation.add(jMenuItemAddFile);

        jMenuItem1.setText("jMenuItem1");
        jPopupMenuTestOperation.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("WSDL :");

        jTextFieldWSDLPath.setText("http://udeljpmc.appspot.com/BankAPIService.wsdl");

        jButtonLoad.setText("Load");
        jButtonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadActionPerformed(evt);
            }
        });

        jListOperations.setModel(operationDataModel);
        jScrollPane1.setViewportView(jListOperations);

        jLabelOperations.setText("Operations:");

        jListTestOperations.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jListTestOperationsMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jListTestOperationsMousePressed(evt);
            }
        });
        jListTestOperations.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListTestOperationsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListTestOperations);
        jListTestOperations.setCellRenderer( new MyListRenderer() );

        jButtonRIght.setText(">>");
        jButtonRIght.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRIghtActionPerformed(evt);
            }
        });

        jButtonLeft.setText("<<");
        jButtonLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLeftActionPerformed(evt);
            }
        });

        jLabel2.setText("Test Operations(right click for more options):");

        jLabel3.setText("Run Time:");

        jLabel4.setText("Ramp Up Time:");

        jLabel5.setText("Thread:");

        jTextFieldRunTime.setText("10");

        jTextFieldRampUpTime.setText("10");

        jTextFieldThreads.setText("10");

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabel6.setText("Interval:");

        jTextFieldInterval.setText("10");

        jListPara.setModel(paraDataModel);
        jListPara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListParaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jListPara);

        jLabel7.setText("Parameters:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWSDLPath))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jButtonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldThreads)
                                            .addComponent(jTextFieldRunTime)
                                            .addComponent(jTextFieldRampUpTime)
                                            .addComponent(jTextFieldInterval))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonRIght, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonLeft, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelOperations)
                                    .addComponent(jButtonLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane3)
                            .addComponent(jLabel7))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldWSDLPath)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButtonLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelOperations)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jButtonRIght)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLeft)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldRunTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldRampUpTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldThreads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSave)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadActionPerformed
        // TODO add your handling code here:

        operationDataModel.build(jTextFieldWSDLPath.getText());
        new ConfigHandler().generateXML(jTextFieldWSDLPath.getText());
        testOperationDataModel.clear();
        //jListOperations.setModel(operationDataModel);
        jListOperations.repaint();


        //jListTestOperations.setModel(testOperationDataModel);
        //jListTestOperations.repaint();


    }//GEN-LAST:event_jButtonLoadActionPerformed

    private void jButtonRIghtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRIghtActionPerformed
        // TODO add your handling code here:
        WSDLData selected = (WSDLData) jListOperations.getSelectedValue();
        if (selected == null) {
            return;
        }

        testOperationDataModel.addOperation(selected);

        operationDataModel.removeOperation(selected);

        //jListOperations.setModel(operationDataModel);
        jListOperations.repaint();


        jListTestOperations.setModel(testOperationDataModel);
        jListTestOperations.repaint();

    }//GEN-LAST:event_jButtonRIghtActionPerformed
private String getToolTipText(MouseEvent e){
    Point p = new Point(e.getX(),e.getY());
    int index = jListTestOperations.locationToIndex(p);
  if (-1 < index) {
  String item = (String)jListTestOperations.getModel().getElementAt(index);
  return item;
  } else {
  return null;
  }
  
}
    private void jButtonLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLeftActionPerformed
        // TODO add your handling code here:
        WSDLData selected = (WSDLData) jListTestOperations.getSelectedValue();
        if (selected == null) {
            return;
        }

        testOperationDataModel.removeOperation(selected);
        operationDataModel.addOperation(selected);

        //jListOperations.setModel(operationDataModel);
        //jListOperations.repaint();


        //jListTestOperations.setModel(testOperationDataModel);
        //jListTestOperations.repaint();
    }//GEN-LAST:event_jButtonLeftActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        ArrayList<String> list = new ArrayList<String>();
        for (WSDLData d : testOperationDataModel.getDataList()) {
            list.add(d.getOp().getName());

        }

        new ConfigHandler().generateConfig(CONFIGFOLDER + "config.cfg", list,
                Integer.parseInt(jTextFieldRunTime.getText()),
                Integer.parseInt(jTextFieldRampUpTime.getText()),
                Integer.parseInt(jTextFieldInterval.getText()),
                Integer.parseInt(jTextFieldThreads.getText()));
        JFrameMain.secs = Integer.parseInt(jTextFieldRunTime.getText());
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jListTestOperationsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListTestOperationsMousePressed
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            JPopupMenu menu = new JPopupMenu();
            JMenuItem item = new JMenuItem("Add Parameter File...");
            item.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    JFileChooser fc = new JFileChooser("~/SimulationData");
                    int returnVal = fc.showOpenDialog(ConfigurationDialog.this);

                    if (returnVal == JFileChooser.APPROVE_OPTION) {
                        File file = fc.getSelectedFile();
                        new ConfigHandler().generatePyWithArgForOp((WSDLData)jListTestOperations.getSelectedValue(),file.getAbsolutePath());
                        ((WSDLData)testOperationDataModel.getElementAt(jListTestOperations.getSelectedIndex())).setArgIsSet(true);
                        //This is where a real application would open the file.

                    } 

                }
            });
            JMenuItem item2 = new JMenuItem("Use Only Template");
            item2.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    new ConfigHandler().generatePyForOp((WSDLData)jListTestOperations.getSelectedValue());
                    ((WSDLData)testOperationDataModel.getElementAt(jListTestOperations.getSelectedIndex())).setArgIsSet(false);

                }
            });
            
            JMenuItem item3 = new JMenuItem("Parameters");
            item3.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    WSDLData data = (WSDLData)testOperationDataModel.getElementAt(jListTestOperations.getSelectedIndex());
                    if(!data.isArgIsSet()){
                        ArrayList<String> argList = (new ConfigHandler().getParaForOp(data));
                        
                    }
                    
                    

                }
            });
            
            menu.add(item);
            menu.add(item2);

            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        }

    }//GEN-LAST:event_jListTestOperationsMousePressed

    private void jListTestOperationsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListTestOperationsMouseEntered
        // TODO add your handling code here:
//        Point p = new Point(evt.getX(),evt.getY());
//        jListTestOperations.setSelectedIndex(jListTestOperations.locationToIndex(p));
//        jListTestOperations.locationToIndex(p)
    }//GEN-LAST:event_jListTestOperationsMouseEntered

    private void jListTestOperationsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListTestOperationsValueChanged
        // TODO add your handling code here:
        paraDataModel.clear();
        
        System.out.println("selection");
        WSDLData data = (WSDLData)jListTestOperations.getSelectedValue();
        for(String s : data.getArgList()){
            paraDataModel.add(s);
        }
        
    }//GEN-LAST:event_jListTestOperationsValueChanged

    private void jListParaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListParaMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jListParaMouseClicked
private class MyListRenderer extends DefaultListCellRenderer  
    {  
        private HashMap theChosen = new HashMap();  
   
        public Component getListCellRendererComponent( JList list,  
                Object value, int index, boolean isSelected,  
                boolean cellHasFocus )  
        {  
            super.getListCellRendererComponent( list, value, index,  
                    isSelected, cellHasFocus );  
   
            if( ((WSDLData)value).isArgIsSet() )  
            {  
                setForeground( Color.green );  
            }  
   
            
   
            return( this );  
        }  
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigurationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigurationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigurationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigurationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConfigurationDialog dialog = new ConfigurationDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLeft;
    private javax.swing.JButton jButtonLoad;
    private javax.swing.JButton jButtonRIght;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelOperations;
    private javax.swing.JList jListOperations;
    private javax.swing.JList jListPara;
    private javax.swing.JList jListTestOperations;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemAddFile;
    private javax.swing.JPopupMenu jPopupMenuTestOperation;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextFieldInterval;
    private javax.swing.JTextField jTextFieldRampUpTime;
    private javax.swing.JTextField jTextFieldRunTime;
    private javax.swing.JTextField jTextFieldThreads;
    private javax.swing.JTextField jTextFieldWSDLPath;
    // End of variables declaration//GEN-END:variables
}
